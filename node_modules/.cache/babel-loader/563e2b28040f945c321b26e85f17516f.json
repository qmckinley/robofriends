{"ast":null,"code":"import _classCallCheck from \"/Users/breadcrumbs.2.satori/Documents/GitHub/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/breadcrumbs.2.satori/Documents/GitHub/robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/breadcrumbs.2.satori/Documents/GitHub/robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/breadcrumbs.2.satori/Documents/GitHub/robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/breadcrumbs.2.satori/Documents/GitHub/robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/breadcrumbs.2.satori/Documents/GitHub/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport { setSearchField } from '../actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchField: state.searchRobots.searchField\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  onSearchChange: (function (event) {\n    return dispatch(setSearchField(event.target.value));\n  });\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.onSearchChange = function (event) {\n      _this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    _this.state = {\n      robots: [],\n      searchfield: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n        return response.json();\n      }).then(function (users) {\n        return _this2.setState({\n          robots: users\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          robots = _this$state.robots,\n          searchfield = _this$state.searchfield;\n      var filteredRobots = robots.filter(function (robot) {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n      }); //  if (robots.length === 0) {\n      //      return <h1>Loading</h1>\n      //  } else {\n\n      return !robots.length ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading\") : React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"f1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"RoboFriends\"), React.createElement(SearchBox, {\n        searchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(ErrorBoundry, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        robots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/breadcrumbs.2.satori/Documents/GitHub/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","mapStateToProps","state","searchField","searchRobots","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","setState","searchfield","robots","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,WAAP;AAEA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD;AAD7B,GAAP;AAGH,CAJD;;AAMA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrCC,EAAAA,cAAc,EAAE,WAACC,KAAD;AAAA,WAAWF,QAAQ,CAACN,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB;AAAA;AACnB,CAFD;;IAIMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AACV;;AADU,UAcdJ,cAdc,GAcG,UAACC,KAAD,EAAW;AACxB,YAAKI,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEL,KAAK,CAACC,MAAN,CAAaC;AAA5B,OAAd;AACH,KAhBa;;AAEV,UAAKR,KAAL,GAAa;AACTY,MAAAA,MAAM,EAAE,EADC;AAETD,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAFU;AAMb;;;;wCAEmB;AAAA;;AAChBE,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAG,KAAK;AAAA,eAAI,MAAI,CAACP,QAAL,CAAc;AAAEE,UAAAA,MAAM,EAAEK;AAAV,SAAd,CAAJ;AAAA,OAFf;AAGH;;;6BAMS;AAAA,wBAC0B,KAAKjB,KAD/B;AAAA,UACEY,MADF,eACEA,MADF;AAAA,UACUD,WADV,eACUA,WADV;AAEN,UAAMO,cAAc,GAAGN,MAAM,CAACO,MAAP,CAAc,UAAAC,KAAK,EAAI;AAC1C,eAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCZ,WAAW,CAACW,WAAZ,EAAlC,CAAP;AACH,OAFsB,CAAvB,CAFM,CAKV;AACA;AACA;;AACI,aAAO,CAACV,MAAM,CAACY,MAAR,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADG,GAGC;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKnB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEa,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAHJ,CAHR;AAaC;;;;EAxCS1B,S;;AA4ClB,eAAeC,OAAO,CAACM,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css';\n\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = (state) => {\n    return {\n        searchField: state.searchRobots.searchField\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n}\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render () {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n    //  if (robots.length === 0) {\n    //      return <h1>Loading</h1>\n    //  } else {\n        return !robots.length ?\n            <h1>Loading</h1> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n        }\n    }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}